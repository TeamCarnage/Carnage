plugins {
	id 'fabric-loom' version '1.9-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
    mavenCentral()
    maven {
        name = "Fabric"
        url = "https://maven.fabricmc.net/"
    }

	// FoundryMC/Veil
	maven {
		name = 'BlameJared Maven (CrT / Bookshelf)'
		url = 'https://maven.blamejared.com'
	}
}

fabricApi {
	configureDataGeneration {
		client = true
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// FoundryMC/Veil
	modImplementation("foundry.veil:veil-fabric-${project.minecraft_version}:${project.veil_version}") {
		exclude group: "maven.modrinth"
	}
	
}

loom {
    runs {
        client {
            // The following are to be ignored for now. -DiaDuck 2025-10-26
            // vmArgs "-Dfabric.skipMcProvider=false"
            //vmArgs "-Djava.library.path=${System.getProperty('java.library.path')}"

            // The following are to be ignored for now. -DiaDuck 2025-10-26
            // environmentVariables.put("DRI_PRIME", "1") // For AMD/Intel (Linux)
            // environmentVariables.put("NV_PRIME_RENDER_OFFLOAD", "1") // For NVIDIA (Linux)
        }
    }
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
	}
}